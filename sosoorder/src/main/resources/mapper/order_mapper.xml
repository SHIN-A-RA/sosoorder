<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soso.app.order.mapper.OrderMapper">

	<!-- 주문내역 -->
	<select id="getOrder" parameterType="OrderCptVO" resultType="map">
		SELECT 
			m.menuName "menuName", 
			o.orderCount "orderCount", 
			m.menuPrice*o.orderCount "price"
			FROM menu m JOIN orderCpt o ON (m.menuNum = o.menuNum)
		
		<where>
		<if test="orderNum != null">
			 o.orderNum = #{orderNum} 
		</if>	
		<if test="payNum != null">
			 o.payNum = #{payNum} 
		</if>
		</where>
	</select>
	
	<!-- 총적립금조회 -->
	<select id="getTotalPoint" resultType="OrderCptVO" parameterType="OrderCptVO">	
		select sum(point*pointCheck) AS point
		from point  		
		<where>
			<if test="storeId != null">
				 storeId = #{storeId}
			</if>
			<if test="phone != null">
				AND memberNum = (SELECT memberNum FROM member WHERE phone = #{phone})      
			</if>	  
		</where>  
	</select>
	
		<!-- 쿠폰조회  -->
	<select id="findCoupon" parameterType="OrderCptVO" resultType="map">
		SELECT 
			c.serialNum "serialNum", 
			c.expStart "expStart", 
			to_char(c.expEnd,'yyyy/mm/dd') "expEnd", 
			c.discount "discount", 
			c.storeId "storeId", 
			u.useCheck "useCheck",
			a.storeName "storeName",
			u.memberNum "memberNum"
		FROM USERCOUPON u 
		INNER JOIN COUPON c 
			ON (u.serialNum = c.serialNum)
		INNER JOIN ADMIN a
			ON (c.storeId = a.storeId)	
		<where>
			c.expEnd > sysdate
			AND u.usecheck = 0
			AND u.memberNum = (SELECT memberNum FROM member WHERE phone = #{phone})    
			<if test="storeId != null">
				AND c.storeId = #{storeId}
			</if>			
		</where>
	</select>
	
	<!-- 좌석번호조회 -->
	<select id="getSeat" resultType="OrderCptVO" parameterType="OrderCptVO">	
		SELECT seat, 
			   seatnum
		FROM seat  		
		<where>
			userCheck ='1'
			<if test="storeId != null">
			and storeId = #{storeId}
			</if>
		</where>
	</select>
	
<insert id="payInsert" parameterType="OrderCptVO">  
	<selectKey resultType="string" keyProperty="payNum" order="BEFORE">
        SELECT NVL(max(PAYNUM), 0)+1 FROM PAYMENT       
    </selectKey>  
	INSERT INTO PAYMENT 
		(PAYNUM, 
		PAYCHECK, 
		PAYDAY, 
		POINTUSE, 
		COUPONUSE, 
		SEATNUM, 
		MEMBERNUM, 
		TOTALPAY, 
		STATUS)
	VALUES(
		#{payNum}, 
		 #{payCheck}, 
		 sysdate, 
		 NVL(#{pointUse},0),    
		 NVL(#{couponUse},0),
		 (SELECT seatNum FROM SEAT WHERE SEAT = #{seat} AND storeId = #{storeId} and usercheck='1'), 
		 (SELECT memberNum FROM member WHERE phone = #{phone}), 
		 #{totalPay}, 
		 '0')
 </insert>

<select id="paymentProc"  statementType="CALLABLE"  parameterType="hashmap">
   { CALL PAYMENT_PROC (
	    #{serialNum},
	    #{pointUse},
	    #{storeId},
	    #{phone},
	    #{addr},
	    #{cellphone},
	    #{payNum}
   ) }
</select>
	
	<insert id="insertPo" parameterType="OrderCptVO">  
	insert into POINT 
		(POINTNUM, 
		POINTDATE, 
		POINT, 
		STOREID, 
		MEMBERNUM, 
		POINTCHECK) 
	values(
		(SELECT NVL(max(POINTNUM), 0)+1 FROM POINT), 
		sysdate,
		(SELECT totalpay *(3/100) FROM payment WHERE payNum = #{payNum}), 
		#{storeId},
		 (SELECT memberNum FROM member WHERE phone = #{phone}), 
		 '1')
	</insert>
	
	 <insert id="insertMem" parameterType="MemberVO">  
      INSERT INTO member
         (memberNum, 
         phone, 
         pwd,
         email)
      VALUES
         ((member_seq.nextval),
         #{phone},
         #{pwd},
         #{email})
  	 </insert>
  	 
  	<select id="insertMemProc"  statementType="CALLABLE"  parameterType="OrderCptVO">
    { CALL after_insertMem_PROC (
		   <!--  #{orderNum, javaType=java.lang.Integer, jdbcType=DECIMAL } , -->
		    #{storeId},    
		    #{phone} ,
		    #{payNum}     
    ) }
	</select>
	
	<select id="showPoint" parameterType="OrderCptVO" resultType="map">
	SELECT a.storeName "storeName", 
			sum(p.point*p.pointCheck) "point"
	FROM POINT p JOIN ADMIN a ON (p.storeId = a.storeId)
		<where>
			p.memberNum = (SELECT memberNum FROM member WHERE phone = #{phone}) 	
		</where>
		group by a.storeName
	</select>
	
	<select id="receiptGet" resultType="OrderCptVO">
	select distinct paynum from orderCpt where orderNum=#{orderNum}
	</select>
	
	<!-- 주소뿌리기 -->
	<select id="getAddr" parameterType="OrderCptVO" resultType="OrderCptVO">
	select deladdr from member 
		<where>
			<if test="phone != null">
				phone = #{phone} 
			</if>	 
		</where>
	</select>
	  
	<select id="getAccount" parameterType="OrderCptVO" resultType="OrderCptVO">
		select accountNum from admin 
		<where>	
			storeId = #{storeId}
		</where>
	</select>
	  

</mapper>