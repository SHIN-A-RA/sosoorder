<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soso.app.payment.mapper.PaymentMapper">

<!-- payment 전체조회 -->
   <select id="getPayment" parameterType="PaymentVO" resultType="PaymentVO">
	SELECT
	*
	FROM payment
   </select>

<!-- payment 일별 매출량-->
   <select id="getDayTotal" parameterType="PaymentVO" resultType="PaymentVO">
	SELECT DISTINCT(TO_Char(payday, 'mm/DD')),
	 		sum(totalpay) 
      FROM admin a , menu m, orderCpt o,payment p
  where a.storeId =m.storeId and m.menuNum = o.menuNum and
  o.paynum = p.paynum
  and a.storeId= #{storeId}
	 group by (TO_Char(payday, 'mm/DD'))
   </select>
  
  
   
<!-- payment 월별 매출량 -->
   <select id="getMonthTotal" resultType="map">
SELECT to_char(payday, 'fmmm') AS month,
 	   sum(totalpay) AS monthTotal
 FROM admin a , menu m, orderCpt o,payment p
  where a.storeId =m.storeId and m.menuNum = o.menuNum and
  o.paynum = p.paynum
  and a.storeId= #{storeId}
 GROUP BY to_char(payday, 'fmmm') 
 ORDER BY to_char(payday,'fmmm') ASC
   </select>   
   
   
   
   
   
   
   <!-- 월 평균과 년수입 비교 자료 -->
 	<select id ="salesData" resultType ="map">
  	 <if test="daySales == ''">
		 SELECT   
		     (select TRUNC(sum(totalpay)/12,0) from payment where to_char(payday,'yyyy') = #{yearSales}) "yearSales",
			 	  NVL((select sum(totalpay) FROM payment where to_char(payday,'yyyy/fmmm')= #{monthSales}),0) "monthSales"
		          FROM admin a , menu m, orderCpt o,payment p
			      where a.storeId =m.storeId and m.menuNum = o.menuNum and
			      o.paynum = p.paynum
			      and a.storeId= #{storeId}
		          AND rownum =1
     </if>
     <if test="daySales != ''">
	  	 SELECT 
	     (select TRUNC(sum(totalpay)/12,0) from payment where to_char(payday,'yyyy') = #{yearSales}) "yearSales",
		 	  NVL((select sum(totalpay) FROM payment where to_char(payday,'yyyy/fmmm')= #{monthSales}),0) "monthSales",
		      NVL((select TRUNC(sum(totalpay),0) from payment where to_char(payday,'yyyy/fmmm/dd') = #{daySales}),0) "daySales"
	          FROM admin a , menu m, orderCpt o,payment p
			  where a.storeId =m.storeId and m.menuNum = o.menuNum and
			  o.paynum = p.paynum
			  and a.storeId= #{storeId}
	    	  AND rownum =1
 	</if>
 	</select>
 	
 	
 	
 	
<!--===================================================== 
 	order mapper.xml로 옮길 가능성 높음   
=====================================================-->
 	
 	<!-- 매출관리 리스트 출력부(순위포함)    -->
 	<select id ="menuSales" resultType = "map">
 		SELECT
			m.menuName AS menuName,
			m.menuPrice AS menuPrice,
			NVL(sum(o.orderCount),0) AS AllAcount,
			NVL(sum(o.orderCount)*m.menuPrice,0) AS salesValues,
			RANK() OVER(order BY NVL(sum(o.orderCount),0) DESC) AS salesRank
		FROM MENU m, OrderCpt o
		WHERE
			m.menuNum = o.menuNum(+)
		AND m.storeId = #{storeId}
		AND m.menucheck = 1 
		GROUP BY m.menuNum ,m.menuName,m.menuPrice, m.storeId
		ORDER BY salesRank DESC 
 	</select>

<!-- 메뉴 매출관리 차트 데이터 -->
	<select id = "menuSalesChart" resultType="map">	
	 	SELECT
		  	m.menuName AS MENUNAME,
	      	NVL(sum(o.orderCount),0) AS AllACOUNT
			FROM MENU m, OrderCpt o
			WHERE m.menuNum = o.menuNum(+)
			AND m.storeId = #{storeId}
			AND m.menucheck = 1
				GROUP BY m.menuNum ,m.menuName,m.menuPrice, m.storeId
	</select>  	
</mapper>

